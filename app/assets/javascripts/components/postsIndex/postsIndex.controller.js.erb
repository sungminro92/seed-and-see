angular
  .module('seedAndSee')
  .controller('PostsIndexController', PostsIndexController);

PostsIndexController.$inject = ['$stateParams','postsService','usersService', '$window'];

function PostsIndexController($stateParams, postsService, usersService, $window) {
  var vm = this;

  vm.posts = [];
  vm.currentUser = {};
  vm.userArray = [];
  vm.sortBy = sortBy;
  vm.limit = 9;
  vm.loadMore = loadMore;
  vm.deletePost = deletePost;

  activate();
  loadPosts();
  hideLoadMore();

// IF WINDOW SIZE IS SMALL, HIDE FILTERS
  function activate() {
    $(window).resize(function() {
      windowWidth = $(window).innerWidth();
      if (windowWidth <= 500) {
      $('.order-by-wrap').hide();
      } else {
      $('.order-by-wrap').show();
      }
    });
  }

  function hideLoadMore() {
    if (vm.posts.length <= 9) {
      $('.load-more').hide();
    }
  }

  // LOAD ALL POSTS FUNCTION
  function loadMore() {
    vm.limit = vm.posts.length;
  }

// LOAD ALL POSTS ON LOAD
  function loadPosts() {
  postsService
  	.getPosts()
  	.then(function(res) {
      console.log(res);
	    vm.posts = res.data.posts;
      vm.currentUser = res.data.currentUser;
      vm.userArray = res.data.user_array;
	  });
  }

  vm.propertyName = 'created_at';
  vm.reverse = true;

// SORT BY
  function sortBy(propertyName) {
    vm.reverse = (vm.propertyName === propertyName) ? !vm.reverse : false;
    vm.propertyName = propertyName;
  }

  function deletePost(post) {
    var userId = $stateParams.userId;
    var id = post.id;

    postsService
      .deletePost(userId, id)
      .then(function(res) {
        console.log('your post has been deleted');
        alert('your post has been deleted!');
        $window.location.reload();
      });
  }
}
